{
  "compilerOptions": {
    "moduleResolution": "node",
    /**
      Svelte Preprocess cannot figure out whether you have a value or a type, so tell TypeScript
      to enforce using `import type` instead of `import` for Types.
     */
    "importsNotUsedAsValues": "error",
    "isolatedModules": true,
    /**
      To have warnings/errors of the Svelte compiler at the correct position,
      enable source maps by default.
     */
    "sourceMap": true,
    "noEmit": true,
    "strict": false,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    "target": "esnext",
    "module": "esnext",
    "resolveJsonModule": true,
    "baseUrl": "./",
    "paths": {
      "__/stores/*": ["./src/stores/*"],
      "__/actions/*": ["./packages/macos-ui/src/actions/*"],
      "__/actions": ["./packages/macos-ui/src/actions"],
      "__/configs/*": ["./packages/macos-ui/src/configs/*"],
      "__/helpers/*": ["./packages/macos-ui/src/helpers/*"],
      "@ui/*": ["./packages/macos-ui/src/*"],
      "os/*": ["./src/*"],
      "browserfs": ["./packages/browserfs/index.ts"],
      "browserfs/*": ["./packages/browserfs/*"]
    },
    "types": ["vite-plugin-pwa/client", "node"],
    /**
     * Typecheck JS in `.svelte` and `.js` files by default.
     * Disable checkJs if you'd like to use dynamic types in JS.
     * Note that setting allowJs false does not prevent the use
     * of JS in `.svelte` files.
     */
    "allowJs": true,
    "checkJs": true
  },
  "include": [
    "src/**/*.d.ts",
    "src/**/*.ts",
    "src/**/*.js",
    "src/**/*.svelte",
    "./*.ts",
    "packages/macos-ui/src/**/*"
  ],
  "exclude": ["node_modules/**/*", "packages/node"],
  "extends": "@tsconfig/svelte/tsconfig.json"
}
